name: CI

on:
  push:
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache Haxe
        uses: actions/cache@v1
        with:
          path: ${{ startsWith(runner.os, 'windows') && '%AppData%' || '~/haxe' }}
          key: ${{ runner.os }}-haxe

      - name: Install Lix
        uses: lix-pm/setup-lix@master

      - name: Install Haxe Libraries
        run: lix download

      - name: Build example
        run: lix run kha html5
        working-directory: ./examples/geometry

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v1.0.5
        with:
          path: examples/geometry/build/html5

  # Deployment job
  deploy:
    runs-on: ubuntu-latest

    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
